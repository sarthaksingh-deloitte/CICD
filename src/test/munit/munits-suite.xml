<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="munits-suite.xml" />
	<munit:test name="munitsFlow-test" doc:id="a3a48611-257b-426b-8e83-1d4e124dad84" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="806f61ba-9b5b-43a7-9883-4848aeca1bf8" processor="snowflake:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b08a3a24-9923-4a73-82f5-de3793f71313" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://munitsFlowtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="00aed39a-384e-420c-8ece-fa96bbd81925" >
				<munit:payload value="#[readUrl('classpath://munitsFlowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://munitsFlowtest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to munitsFlow" doc:id="42757a78-ca31-4b3b-84f6-5b0d3cd37b2e" name="munitsFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="20ccece0-e402-4947-b323-dc47607f4838" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munitsFlowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
